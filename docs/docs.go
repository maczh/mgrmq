// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/msg/resend": {
            "post": {
                "description": "重新发送指定时间段内的失败消息",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "发布"
                ],
                "summary": "重新发送指定时间段内的失败消息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "消息队列名，不传为配置中的所有队列",
                        "name": "queue",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "开始时间，格式 yyyy-MM-dd HH:mm:ss,不传默认为当天0点",
                        "name": "start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "结束时间，格式 yyyy-MM-dd HH:mm:ss,不传默认为当前时间",
                        "name": "end",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/msg/send": {
            "post": {
                "description": "发送一条消息到消息队列",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "发布"
                ],
                "summary": "发送一条消息到消息队列",
                "parameters": [
                    {
                        "type": "string",
                        "description": "消息队列名",
                        "name": "queue",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "消息内容，必须是mgin中的client.Options格式",
                        "name": "msg",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0(mgrmq)",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "RabbitMQ通用消息中转与处理模块",
	Description:      "RabbitMQ通用消息中转与处理模块",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
